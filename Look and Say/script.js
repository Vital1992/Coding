// Look-and-Say Sequence

// Find the n’th term in Look-and-say (Or Count and Say) Sequence. The look-and-say sequence is the sequence of the below integers: 
// 1, 11, 21, 1211, 111221, 312211, 13112221, 1113213211, … 

// How is the above sequence generated? 
// n’th term is generated by reading (n-1)’th term.

// The first term is "1"
// Second term is "11", generated by reading first term as "One 1" 
// (There is one 1 in previous term)
// Third term is "21", generated by reading second term as "Two 1"
// Fourth term is "1211", generated by reading third term as "One 2 One 1" 
// and so on

function look(arr) {
    if (arr.length === 0) {
        return []
    }
    // loop thru one number, when done write count and number
    let resArr = []
    let distNum = arr[0]
    let count = 1

    for (let i = 1; i < arr.length; i++){
        if (distNum === arr[i]) {
            count++
        }
        if (distNum !== arr[i]) {
            resArr.push(count, distNum)
            distNum = arr[i]
            count = 1
        }
        if (i === arr.length - 1){
            resArr.push(count, distNum)
        }
    }
    return resArr
}

function lookAndSay(n){
    let resArr = [1]
    for (let i = 0; i < n - 2; i++){
        if (i < 1) {
            resArr.push(1)
        }
        resArr = look(resArr)
    }
    return resArr
}

console.log(lookAndSay(5))